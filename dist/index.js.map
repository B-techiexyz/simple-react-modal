{"version":3,"file":"index.js","sources":["../src/hookshelper.tsx","../src/index.tsx"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * simple-react-modal\n * Licensed under MIT (https://github.com/B-techiexyz/simple-react-modal/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as React from \"react\";\n\nexport function useOnClick(ref: any, handler: any) {\n    React.useEffect(() => {\n      const listener = (event: any) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n        handler(event);\n      };\n  \n      document.addEventListener(\"mousedown\", listener);\n  \n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n  }","/**\n * --------------------------------------------------------------------------\n * simple-react-modal\n * Licensed under MIT (https://github.com/B-techiexyz/simple-react-modal/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as React from \"react\";\nimport { useOnClick } from \"./hookshelper\";\nimport \"./styles.scss\";\n\nexport type ModalProps = {\n  className?: string;\n  visible: boolean;\n  onClose?: () => void;\n  onCloseOutsideClick?: boolean;\n  children: React.ReactNode;\n};\n\nconst { useEffect, useRef } = React\n\nfunction Modal (props: ModalProps) {\n  const ref: any = useRef();\n\n  useEffect(() => {\n    if (props.visible) {\n      document.body.classList.add(\"overFlowHidden\");\n    }\n    return () => {\n      document.body.classList.remove(\"overFlowHidden\");\n    };\n  }, [props.visible]);\n\n  useOnClick(ref, () =>\n    props.onCloseOutsideClick && props.onClose ? props.onClose() : undefined\n  );\n\n  return props.visible ? (\n    <div className={\"container\"} role=\"presentation\">\n      <div className={\"backDrop\"} aria-hidden=\"true\"></div>\n      <div className={\"innerContainer\"} role=\"none presentation\" tabIndex={-1}>\n        <div className={`innerPaper ${props.className}`} ref={ref}>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Modal;\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;SASgB,UAAU,CAAC,GAAQ,EAAE,OAAY;IAC7CA,gBAAK,CAAC,SAAS,CAAC;QACd,IAAM,QAAQ,GAAG,UAAC,KAAU;;YAE1B,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBACtD,OAAO;aACR;YACD,OAAO,CAAC,KAAK,CAAC,CAAC;SAChB,CAAC;QAEF,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAEjD,OAAO;YACL,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;SACrD,CAAC;KACH,EAAE,EAAE,CAAC,CAAC;AACT;;;;ACzBF;;;;;;AAmBQ,IAAA,SAAS,GAAaA,gBAAK,UAAlB,EAAE,MAAM,GAAKA,gBAAK,OAAV,CAAU;AAEnC,SAAS,KAAK,CAAE,KAAiB;IAC/B,IAAM,GAAG,GAAQ,MAAM,EAAE,CAAC;IAE1B,SAAS,CAAC;QACR,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC/C;QACD,OAAO;YACL,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;SAClD,CAAC;KACH,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAEpB,UAAU,CAAC,GAAG,EAAE;QACd,OAAA,KAAK,CAAC,mBAAmB,IAAI,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,SAAS;KAAA,CACzE,CAAC;IAEF,OAAO,KAAK,CAAC,OAAO,IAClBA,wCAAK,SAAS,EAAE,WAAW,EAAE,IAAI,EAAC,cAAc;QAC9CA,wCAAK,SAAS,EAAE,UAAU,iBAAc,MAAM,GAAO;QACrDA,wCAAK,SAAS,EAAE,gBAAgB,EAAE,IAAI,EAAC,mBAAmB,EAAC,QAAQ,EAAE,CAAC,CAAC;YACrEA,wCAAK,SAAS,EAAE,gBAAc,KAAK,CAAC,SAAW,EAAE,GAAG,EAAE,GAAG,IACtD,KAAK,CAAC,QAAQ,CACX,CACF,CACF,IACJ,IAAI,CAAC;AACX;;;;"}